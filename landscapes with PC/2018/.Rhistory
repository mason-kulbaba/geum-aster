res<- t.test(cars$speed, cars$dist, paired=FALSE, data=cars)
res
#using built-in data "cars"
lizard <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter12/chap12e3HornedLizards.csv"), stringsAsFactors = FALSE)
head(lizard)
t.test(squamosalHornLength ~ Survival, data = lizard, var.equal = TRUE)
t.test(squamosalHornLength ~ Survival, data = lizard)
horn.test <-t.test(squamosalHornLength ~ Survival, data = lizard)
horn.test
horn.test <-t.test(squamosalHornLength ~ Survival, data = lizard, equal.var=TRUE)
horn.test
data(cars)
hist(cars)
sapply(cars, hist)
dim(cars)
data(cars)
head(cars)
plot( cars$speed, cars$dist)
plot( cars$dist, cars$speed)
data(cars)
plot(cars$speed, cars$dist)
dfata(iris)
data("iris")
head(iris)
boxplot(iris$Sepal.Width)
boxplot(iris$Sepal.Length)
boxplot(iris$Petal.Length)
boxplot(iris$Petal.Width)
lizard <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter12/chap12e3HornedLizards.csv"), stringsAsFactors = FALSE)
head(lizard)
horn.test<-t.test(squamosalHornLength ~ Survival, data = lizard, equal.var=TRUE)
horn.test
horn.test<-t.test(squamosalHornLength ~ Survival, data = lizard)
horn.test
circadian <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter15/chap15e1KneesWhoSayNight.csv"), stringsAsFactors = FALSE)
circadian
# Order the groups
circadian$treatment <- factor(circadian$treatment,
levels = c("control", "knee", "eyes"))
#Descriptive statistics
circadianStats <- summarize(group_by(circadian, treatment),
Ybar = mean(shift, na.rm = TRUE),
s = sd(shift, na.rm = TRUE),
n = n())
#packages you will need
install.packages("emmeans", dependencies = TRUE) # only if not yet installed
library(ggplot2)
library(dplyr)
library(nlme)
library(emmeans)
circadian <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter15/chap15e1KneesWhoSayNight.csv"), stringsAsFactors = FALSE)
# Order the groups
circadian$treatment <- factor(circadian$treatment,
levels = c("control", "knee", "eyes"))
#Descriptive statistics
circadianStats <- summarize(group_by(circadian, treatment),
Ybar = mean(shift, na.rm = TRUE),
s = sd(shift, na.rm = TRUE),
n = n())
data.frame(circadianStats)
#Descriptive statistics
circadianStats <- summarize(group_by(circadian, treatment),
Mean = mean(shift, na.rm = TRUE),
s = sd(shift, na.rm = TRUE),
n = n())
data.frame(circadianStats)
# Make basic plot
ggplot(circadian, aes(x = treatment, y = shift)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Light treatment", y = "Shift in circadian rhythm (h)") +
theme_classic()
#standard error bars
ggplot(circadian, aes(x = treatment, y = shift)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun.y = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Light treatment", y = "Shift in circadian rhythm (h)") +
theme_classic()
# Analysis of variance
circadianAnova <- lm(shift ~ treatment, data = circadian)
anova(circadianAnova)
# Calculate R-squared
circadianAnovaSummary <- summary(circadianAnova)
circadianAnovaSummary$r.squared
#planned comparison
circadianPairs <- emmeans(circadianAnova, specs = "treatment")
circadianPlanned <- contrast(circadianPairs, method = "pairwise", adjust = "none")
confint(circadianPlanned)
circadianPlanned <- contrast(circadianPairs, method = "pairwise", adjust = "none")
circadianPlanned
# load data
booby <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter16/chap16e1FlippingBird.csv"), stringsAsFactors = FALSE)
head(booby)
# scatter plot of data
ggplot(booby, aes(nVisitsNestling, futureBehavior)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Events experienced while a nestling", y = "Future behavior") +
theme_classic()
#Pearson's product-moment correlation
boobyCor <- cor.test(~ futureBehavior + nVisitsNestling, data = booby)
boobyCor
#standard error for correlaiton
SE <- sqrt( (1 - r^2)/(nrow(booby) - 3) )
#standard error for correlaiton
SE <- sqrt( (1 - r^2)/(nrow(booby) - 3) )
#standard error for correlaiton
r <- boobyCor$estimate
r
SE <- sqrt( (1 - r^2)/(nrow(booby) - 3) )
unname(SE)
lion <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter17/chap17e1LionNoses.csv"), stringsAsFactors = FALSE)
head(lion)
#make scatter plot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
#perform linear regression
lionRegression <- lm(ageInYears ~ proportionBlack, data = lion)
summary(lionRegression)
# 95% CI
confint(lionRegression)
# add regression line to scatterplot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
lion <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter17/chap17e1LionNoses.csv"), stringsAsFactors = FALSE)
head(lion)
#make scatter plot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
#perform linear regression
lionRegression <- lm(ageInYears ~ proportionBlack, data = lion)
summary(lionRegression)
#make scatter plot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
# Correlation and Regression Code
library(ggplot2)
#make scatter plot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
#perform linear regression
lionRegression <- lm(ageInYears ~ proportionBlack, data = lion)
summary(lionRegression)
# 95% CI
confint(lionRegression)
# add regression line to scatterplot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
tinytex::install_tinytex
install.packages("TinyTex")
install.packages("tinytex")
install.packages("tinytex")
light<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/plant_light3.csv")
install.packages('tinytex')
install.packages('Rtools')
install.packages("tinytex")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
tinytex::latexmk()
tinytex::latexmk(plant_light)
knitr::opts_chunk$set(echo = TRUE)
light<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/plant_light3.csv")
#show data
light
library(emmeans)
model<- lm(height ~ Treatment, data=light)
summary(model)
library(ggplot2)
# Make basic plot
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
#standard error bars
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun.y = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
# Make basic plot
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
#standard error bars
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
#standard error bars
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
#planned comparison
pairs <- emmeans(model, specs = "Treatment")
planned_contrasts <- contrast(pairs, method = "pairwise",
adjust = "none")
planned_contrasts
#standard error bars
ggplot(light, aes(x = light$Treatment, y = light$height)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
?latexmk
tinytex::pdflatex('test.tex')
tinytex::pdflatex('plant_light.tex')
light<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/selection/data.csv")
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/selection/data.csv")
#show data
dat
names(dat)
model<- lm(Offspring_germ ~ Parent_germ, data=dat)
summary(model)
model2<- lm(Offspring_flwno ~ Parent_flwno, data=dat)
summary(model2)
# Make basic plot
ggplot(dat, aes(x = dat$Parent_germ, y = dat$Offspring_germ)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Mean parent days to emergence", y = "Mean offspring days to emergence") +
theme_classic()
library(ggplot2)
# Make basic plot
ggplot(dat, aes(x = dat$Parent_germ, y = dat$Offspring_germ)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Mean parent days to emergence", y = "Mean offspring days to emergence") +
theme_classic()
lion <- read.csv(url("https://whitlockschluter3e.zoology.ubc.ca/Data/chapter17/chap17e1LionNoses.csv"), stringsAsFactors = FALSE)
head(lion)
#make scatter plot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
#perform linear regression
lionRegression <- lm(ageInYears ~ proportionBlack, data = lion)
summary(lionRegression)
# 95% CI
confint(lionRegression)
# add regression line to scatterplot
ggplot(lion, aes(proportionBlack, ageInYears)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
ggplot(dat, aes(dat$Parent_germ, dat$Offspring_germ)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
# Make basic plot
ggplot(dat, aes(x = dat$Parent_germ, y = dat$Offspring_germ)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Mean parent days to emergence", y = "Mean offspring days to emergence") +
theme_classic()
ggplot(dat, aes(dat$Parent_germ, dat$Offspring_germ)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Proportion black", y = "Age (years)") +
theme_classic()
ggplot(dat, aes(x = dat$Parent_flwno, y = dat$Offspring_flwno)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Mean parent number of flowers", y = "Mean offspring number of flowers") +
theme_classic()
ggplot(dat, aes(dat$Parent_flwno, dat$Offspring_flwno)) +
geom_point(size = 3, col = "firebrick") +
geom_smooth(method = "lm", se = FALSE, col = "black") +
labs(x = "Mean parent number of flowers", y = "Mean offspring number of flowers") +
theme_classic()
summary(model)
summary(model2)
?mean
mean(dat$Parent_germ) - mean(dat$Offspring_germ)
mean(dat$Offspring_germ) - mean(dat$Parent_germ)
mean(dat$Offspring_flwno) - mean(dat$Parent_flwno)
S = 0.263/0.5008
S
S = 2.211/0.7036
S
light<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/ph/ph.csv")
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/ph/ph.csv")
#show data
dat
library(emmeans)
head(dat)
model<- lm(Weight ~ Treatment, data=dat)
summary(model)
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$Weight)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "pH Treatment", y = "Weight (g)") +
theme_classic()
library(ggplot2)
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$Weight)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "pH Treatment", y = "Weight (g)") +
theme_classic()
pairs <- emmeans(model, specs = "Treatment")
planned_contrasts <- contrast(pairs, method = "pairwise",
adjust = "none")
planned_contrasts
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/ph/ph.csv")
#show data
dat
model<- lm(Weight ~ Treatment, data=dat)
summary(model)
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$Weight)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "pH Treatment", y = "Weight (g)") +
theme_classic()
pairs <- emmeans(model, specs = "Treatment")
planned_contrasts <- contrast(pairs, method = "pairwise",
adjust = "none")
planned_contrasts
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/ph/ph.csv")
#show data
dat
library(emmeans)
model<- lm(Weight ~ Treatment, data=dat)
summary(model)
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$Weight)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "pH Treatment", y = "Weight (g)") +
theme_classic()
pairs <- emmeans(model, specs = "Treatment")
planned_contrasts <- contrast(pairs, method = "pairwise",
adjust = "none")
planned_contrasts
light<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/plant_light3.csv")
head(ligh)
head(light)
summary(light$height, by=light$Treatment)
summary(light$height, by=c(light$Treatment))
install.packages("heritability")
data(LD)
library(heritability)
data(LD)
data(LDV)
head(LD)
head(LDV)
data(K_atwell)
head(K_atwell)
data("LA_H")
head(LA_H)
dim(K_atwell)
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/herbicide.csv")
#show data
dat
dat<- read.csv("C:/Users/mkulbaba/Dropbox/git/students/herbicide.csv")
#show data
dat
library(emmeans)
model<- lm(mass ~ Treatment, data=dat)
summary(model)
library(ggplot2)
# Make basic plot
ggplot(dat, aes(x = dat$Treatment, y = dat$mass)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
labs(x = "Light treatment", y = "Height (cm)") +
theme_classic()
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$mass)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Competition treatment", y = "Mass (mg)") +
theme_classic()
#standard error bars
ggplot(dat, aes(x = dat$Treatment, y = dat$mass)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
labs(x = "Competition treatment", y = "Mass (mg)") +
theme_classic()
pairs <- emmeans(model, specs = "Treatment")
planned_contrasts <- contrast(pairs, method = "pairwise",
adjust = "none")
planned_contrasts
setwd("C:/Users/mkulbaba/Dropbox/git/geum-aster/landscapes with PC/2018")
dat2<- read.csv("dat2.csv")
#load aster model
load("aout3.RData")
#check for coefficients
aout$coefficients
a1 <- aout$coefficients["PC1"]
a2 <- aout$coefficients["flw.no2018"]
a <- c(a1, a2)
A11 <- aout$coefficients["I(PC1^2)"]
A22 <- aout$coefficients["I(flw.no2018^2)"]
A12 <- aout$coefficients["I(2 * PC1 * flw.no2018)"]
A <- matrix(c(A11, A12, A12, A22), 2, 2)
eigen(A, symmetric = TRUE, only.values = TRUE)$values
max8 <- (-solve(A, a)/2)
print(max8)
par(mar=c(5.5, 4.5, 4.5, 8.5), xpd=TRUE)
names(dat)
names(dat2)
plot(dat2$PC1, dat2$PC2, xlab = "PC1",
ylab = "Flower number 2018", col=as.factor(dat2$Region), pch=16, ylim=c(0,60))
plot(dat2$PC1, dat2$PC2, xlab = "PC1",
ylab = "Flower number 2018", col=as.factor(dat2$Region), pch=16, )
legend("topright", inset=c(-.6,0), legend=c("Great Lakes Alvar", "Manitoba Alvar", "Prairie"),col=1:3, pch=16, title="Region", bty="n")
ufoo <- par("usr")
nx <- 101
ny <- 101
z <- matrix(NA, nx, ny)
x <- seq(ufoo[1], ufoo[2], length = nx)
y <- seq(ufoo[3], ufoo[4], length = ny)
points(max8[1], max8[2], pch = 17, col=4)
for (i in 1:nx) {
for (j in 1:ny) {
b <- c(x[i], y[j])
z[i, j] <- sum(a * b) + as.numeric(t(b) %*% A %*%
+ b)
}
}
b <- as.numeric(max8)
contour(x, y, z,levels=c(0.1, 0.2, 0.3, 0.4, 0.5), add = TRUE)
plot(dat2$PC1, dat2$PC2, xlab = "PC1",
ylab = "Flower number 2018", col=as.factor(dat2$Region), pch=16, )
legend("topright", inset=c(-.6,0), legend=c("Great Lakes Alvar", "Manitoba Alvar", "Prairie"),col=1:3, pch=16, title="Region", bty="n")
ufoo <- par("usr")
nx <- 101
ny <- 101
z <- matrix(NA, nx, ny)
x <- seq(ufoo[1], ufoo[2], length = nx)
y <- seq(ufoo[3], ufoo[4], length = ny)
points(max8[1], max8[2], pch = 17, col=4)
for (i in 1:nx) {
for (j in 1:ny) {
b <- c(x[i], y[j])
z[i, j] <- sum(a * b) + as.numeric(t(b) %*% A %*%
+ b)
}
}
b <- as.numeric(max8)
contour(x, y, z, add = TRUE)
